<!DOCTYPE html>
<html lang="en-us">
  <head>
    <meta charset="UTF-8">
    <title>Puppet Ramp Up Program Control-Repo by npwalker</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="stylesheets/normalize.css" media="screen">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" type="text/css" href="stylesheets/stylesheet.css" media="screen">
    <link rel="stylesheet" type="text/css" href="stylesheets/github-light.css" media="screen">
  </head>
  <body>
    <section class="page-header">
      <h1 class="project-name">Puppet Ramp Up Program Control-Repo</h1>
      <h2 class="project-tagline">An opinionated control repository and steps for setting it up in PE</h2>
      <a href="https://github.com/npwalker/control-repo" class="btn">View on GitHub</a>
      <a href="https://github.com/npwalker/control-repo/zipball/master" class="btn">Download .zip</a>
      <a href="https://github.com/npwalker/control-repo/tarball/master" class="btn">Download .tar.gz</a>
    </section>

    <section class="main-content">
      <h1>
<a id="table-of-contents" class="anchor" href="#table-of-contents" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Table of contents</h1>

<ul>
<li><a href="#join-the-ramp-up-channel-on-puppet-community-slack">Join the #ramp-up channel on Puppet Community Slack</a></li>
<li><a href="#before-starting">Before starting</a></li>
<li><a href="#what-you-get-from-this-control-repo">What you get from this control-repo</a></li>
<li>
<a href="#how-to-set-it-all-up">How to set it all up</a>

<ul>
<li>
<a href="#copy-this-repo-into-your-own-git-server">Copy this repo into your own Git server</a>

<ul>
<li><a href="#gitlab">GitLab</a></li>
<li><a href="#stash">Stash</a></li>
<li><a href="#github">GitHub</a></li>
</ul>
</li>
<li>
<a href="#configure-pe-to-use-the-control-repo">Configure PE to use the control-repo</a>

<ul>
<li><a href="#install-pe">Install PE</a></li>
<li><a href="#get-the-control-repo-deployed-on-your-master">Get the control-repo deployed on your master</a></li>
</ul>
</li>
<li>
<a href="#setup-a-webhook-in-your-git-server">Setup a webhook in your Git server</a>

<ul>
<li><a href="#gitlab-1">Gitlab</a></li>
</ul>
</li>
<li><a href="#test-code-manager">Test Code Manager</a></li>
</ul>
</li>
</ul>

<h1>
<a id="join-the-ramp-up-channel-on-puppet-community-slack" class="anchor" href="#join-the-ramp-up-channel-on-puppet-community-slack" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Join the #ramp-up channel on Puppet Community Slack</h1>

<p>Our <a href="http://slack.puppet.com">Puppet Community Slack</a> is a great way to interact with other Puppet users.  The #ramp-up channel is specifically for users who are new to Puppet Enterprise and using this repository. Other channels in the Puppet Community Slack are great for asking general Puppet questions.</p>

<h1>
<a id="before-starting" class="anchor" href="#before-starting" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Before starting</h1>

<p>This control-repo and the steps below are intended to be used with a new installation of PE 2016.1.z.</p>

<p><strong>Warning:</strong> When using an existing PE installation any existing code or modules in <code>/etc/puppetlabs/code</code> will be copied to a backup directory <code>/etc/puppetlabs/code_bak_&lt;timestamp&gt;</code> in order to allow deploying code from code manager.</p>

<h1>
<a id="what-you-get-from-this-control-repo" class="anchor" href="#what-you-get-from-this-control-repo" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>What you get from this control-repo</h1>

<p>When you finish the instructions below, you will have the beginning of a best practices installation of PE including:</p>

<ul>
<li>A Git server</li>
<li>The ability to push code to your Git server and have it automatically deployed to your PE master</li>
<li>A config_version script that outputs the most recent SHA of your code each time you run <code>puppet agent -t</code>
</li>
<li>Optimal tuning of PE settings for this configuration</li>
<li>Working and example <a href="https://docs.puppet.com/pe/latest/puppet_assign_configurations.html#assigning-configuration-data-with-role-and-profile-modules">roles and profiles</a> code</li>
</ul>

<h1>
<a id="how-to-set-it-all-up" class="anchor" href="#how-to-set-it-all-up" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>How to set it all up</h1>

<h2>
<a id="copy-this-repo-into-your-own-git-server" class="anchor" href="#copy-this-repo-into-your-own-git-server" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Copy this repo into your own Git server</h2>

<h3>
<a id="gitlab" class="anchor" href="#gitlab" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>GitLab</h3>

<ol>
<li>
<p>On a new server, install GitLab</p>

<ul>
<li><a href="https://about.gitlab.com/downloads/">https://about.gitlab.com/downloads/</a></li>
</ul>
</li>
<li><p>After GitLab is installed you may sign into the web UI with the <code>root</code> user and password <code>5iveL!fe</code></p></li>
<li><p>In the GitLab UI, make a user for yourself</p></li>
<li>
<p>From your laptop or development machine, make an SSH key to link with your user.</p>

<ul>
<li>Note: this is used for your laptop to communicate with your GitLab server to push code</li>
<li><a href="https://help.github.com/articles/generating-ssh-keys/">https://help.github.com/articles/generating-ssh-keys/</a></li>
<li><a href="http://doc.gitlab.com/ce/ssh/README.html">http://doc.gitlab.com/ce/ssh/README.html</a></li>
</ul>
</li>
<li>
<p>In the GitLab UI, create a group called <code>puppet</code> ( this is case sensitive )</p>

<ul>
<li><a href="http://doc.gitlab.com/ce/workflow/groups.html">http://doc.gitlab.com/ce/workflow/groups.html</a></li>
</ul>
</li>
<li>
<p>In the GitLab UI, add your user to the <code>puppet</code> group</p>

<ul>
<li>Make sure to give your user at least master permissions so you can complete the below steps</li>
<li>Read more about permissions:

<ul>
<li><a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/permissions/permissions.md">https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/permissions/permissions.md</a></li>
</ul>
</li>
</ul>
</li>
<li><p>In the GitLab UI, create a project called <code>control-repo</code> and set its Namespace to the <code>puppet</code> group</p></li>
<li>
<p>On your laptop, clone this GitHub control repo</p>

<ul>
<li><code>git clone &lt;repo URL&gt;</code></li>
<li><code>cd control-repo</code></li>
</ul>
</li>
<li>
<p>On your laptop, remove the origin remote</p>

<ul>
<li><code>git remote remove origin</code></li>
</ul>
</li>
<li>
<p>On your laptop, add your internal repo as the origin remote</p>

<ul>
<li><code>git remote add origin &lt;SSH URL of your GitLab repo&gt;</code></li>
</ul>
</li>
<li>
<p>On your laptop, push the production branch of the repo from your machine up to your Git server</p>

<ul>
<li><code>git push origin production</code></li>
</ul>
</li>
</ol>

<h3>
<a id="stash" class="anchor" href="#stash" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Stash</h3>

<p>Coming soon!</p>

<h3>
<a id="github" class="anchor" href="#github" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>GitHub</h3>

<p>Coming soon!</p>

<h2>
<a id="configure-pe-to-use-the-control-repo" class="anchor" href="#configure-pe-to-use-the-control-repo" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Configure PE to use the control-repo</h2>

<h3>
<a id="install-pe" class="anchor" href="#install-pe" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Install PE</h3>

<ol>
<li>Download the latest version of the PE installer for your platform

<ul>
<li><a href="https://puppetlabs.com/download-puppet-enterprise">https://puppetlabs.com/download-puppet-enterprise</a></li>
</ul>
</li>
<li>SSH into your Puppet master and copy the installer tarball into <code>/tmp</code>
</li>
<li>Expand the tarball and <code>cd</code> into the directory</li>
<li>Run <code>puppet-enterprise-installer</code> to install</li>
</ol>

<p>If you run into any issues or have more questions about the installer you can see our docs here:</p>

<p><a href="http://docs.puppetlabs.com/pe/latest/install_basic.html">http://docs.puppetlabs.com/pe/latest/install_basic.html</a></p>

<h3>
<a id="get-the-control-repo-deployed-on-your-master" class="anchor" href="#get-the-control-repo-deployed-on-your-master" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Get the control-repo deployed on your master</h3>

<p>At this point you have our control-repo code deployed into your Git server.  However, we have one final challenge: getting that code onto your Puppet master.  In the end state the master will pull code from the Git server via Code Manager, however, at this moment your Puppet master does not have credentials to get code from the Git server.</p>

<p>We will set up a deploy key in the Git server that will allow an SSH key we make to deploy the code and configure everything else.</p>

<ol>
<li>On your Puppet master, make an SSH key for r10k to connect to GitLab

<ul>
<li><code>/usr/bin/ssh-keygen -t rsa -b 2048 -C 'code_manager' -f /etc/puppetlabs/puppetserver/ssh/id-control_repo.rsa -q -N ''</code></li>
<li><code>cat /etc/puppetlabs/puppetserver/ssh/id-control_repo.rsa.pub</code></li>
<li>References:

<ul>
<li><a href="https://help.github.com/articles/generating-ssh-keys/">https://help.github.com/articles/generating-ssh-keys/</a></li>
<li><a href="http://doc.gitlab.com/ce/ssh/README.html">http://doc.gitlab.com/ce/ssh/README.html</a></li>
</ul>
</li>
</ul>
</li>
<li>In the GitLab UI, create a deploy key on the <code>control-repo</code> project

<ul>
<li>Paste in the public key from above</li>
</ul>
</li>
<li>Login to the PE console</li>
<li>Navigate to the <strong>Nodes &gt; Classification</strong> page

<ul>
<li>Click on the <strong>PE Master</strong> group</li>
<li>Click the <strong>Classes</strong> tab</li>
<li>Add the <code>puppet_enterprise::profile::master</code>

<ul>
<li>Set the <code>r10k_remote</code> to the SSH URL from the front page of your GitLab repo</li>
<li>Set the <code>r10k_private_key</code> parameter to <code>/etc/puppetlabs/puppetserver/ssh/id-control_repo.rsa</code>
</li>
</ul>
</li>
<li>
<strong>Commit</strong> your changes</li>
</ul>
</li>
<li>
<p>On your Puppet master</p>

<ul>
<li>
<p>Run:</p>

<pre><code>puppet agent -t
r10k deploy environment -pv
puppet agent -t
</code></pre>
</li>
</ul>
</li>
<li>
<p>Navigate back to the <strong>Nodes &gt; Classification</strong> page</p>

<ul>
<li>Near the top of the page select "add a group"</li>
<li>Type <code>role::all_in_one_pe</code> for the group name

<ul>
<li>Click the <strong>Add Group</strong> button</li>
</ul>
</li>
<li>Click the <strong>add membership rules, classes and variables</strong> link that appears

<ul>
<li>Below <strong>Pin specific nodes to the group</strong> type your master's FQDN into the box

<ul>
<li>Click <strong>pin node</strong>
</li>
</ul>
</li>
</ul>
</li>
<li>Select the <strong>Classes</strong> tab

<ul>
<li>On the right hand side, click the <strong>Refresh</strong> link

<ul>
<li>Wait for this to complete</li>
</ul>
</li>
<li>In the <strong>add new classes</strong> box type <code>role::all_in_one_pe</code>

<ul>
<li>Click <strong>add class</strong>
</li>
</ul>
</li>
</ul>
</li>
<li>
<strong>Commit</strong> your changes</li>
</ul>
</li>
<li>
<p>On your Puppet master</p>

<ul>
<li>
<p>Run:</p>

<pre><code>puppet agent -t
echo 'code_manager_mv_old_code=true' &gt; /opt/puppetlabs/facter/facts.d/code_manager_mv_old_code.txt
puppet agent -t
</code></pre>
</li>
</ul>
</li>
<li><p>Code Manager is configured and has been used to deploy your code</p></li>
</ol>

<h2>
<a id="setup-a-webhook-in-your-git-server" class="anchor" href="#setup-a-webhook-in-your-git-server" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Setup a webhook in your Git server</h2>

<p>Independent of which Git server you choose you will grab the webhook URL from your master.  Then each Git Server will have similar but slightly different ways to add the webhook.  </p>

<ol>
<li>On your Puppet master

<ul>
<li><code>cat /etc/puppetlabs/puppetserver/.puppetlabs/webhook_url.txt</code></li>
</ul>
</li>
</ol>

<h3>
<a id="gitlab-1" class="anchor" href="#gitlab-1" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Gitlab</h3>

<ol>
<li>In your Git server's UI, navigate to the control-repo repository

<ul>
<li> In the left hand pane, scroll to the bottom and select <strong>settings</strong>
</li>
<li>In the left hand pane, select <strong>webhooks</strong>
</li>
</ul>
</li>
<li>Paste the above webhook URL into the URL field</li>
<li>In the trigger section mark the checkbox for <strong>push events</strong> only</li>
<li>Disable SSL verification on the webhook

<ul>
<li>Since Code Manager uses a self-signed cert from the Puppet CA it is not generally trusted</li>
</ul>
</li>
<li>After you created the webhook use "test webhook" or similar functionality to confirm it works</li>
</ol>

<h2>
<a id="test-code-manager" class="anchor" href="#test-code-manager" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Test Code Manager</h2>

<p>One of the components setup by this control-repo is that when you "push" code to your Git server, the git server will inform the Puppet master to deploy branch you just pushed.</p>

<ol>
<li>In one terminal window, <code>tail -f /var/log/puppetlabs/puppetserver/puppetserver.log</code>
</li>
<li>In a second terminal window

<ul>
<li>Add a new file, <code>touch test_file</code>
</li>
<li><code>git add test_file</code></li>
<li><code>git commit -m "adding a test_file"</code></li>
<li><code>git push origin production</code></li>
</ul>
</li>
<li>Allow the push to complete and then wait a few seconds for everything to sync over

<ul>
<li>
<code>ls -l /etc/puppetlabs/code/environments/production</code>

<ul>
<li>Confirm test_file is present</li>
</ul>
</li>
</ul>
</li>
<li>In your first terminal window review the <code>puppetserver.log</code> to see the type of logging each sync will create</li>
</ol>

      <footer class="site-footer">
        <span class="site-footer-owner"><a href="https://github.com/npwalker/control-repo">Puppet Ramp Up Program Control-Repo</a> is maintained by <a href="https://github.com/npwalker">npwalker</a>.</span>

        <span class="site-footer-credits">This page was generated by <a href="https://pages.github.com">GitHub Pages</a> using the <a href="https://github.com/jasonlong/cayman-theme">Cayman theme</a> by <a href="https://twitter.com/jasonlong">Jason Long</a>.</span>
      </footer>

    </section>

  
  </body>
</html>
